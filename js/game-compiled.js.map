{"version":3,"sources":["game.js"],"names":[],"mappings":"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","file":"game-compiled.js","sourcesContent":["/**\r\n * Created by Lili on 1.10.2015 �..\r\n */\r\n\"use strict\";\r\nvar DEBUG_MODE = true;\r\nvar pathologicGame;\r\nvar GameModule = (function () {\r\n    var game = pathologicGame = pathologicGame || {};\r\n    // constants\r\n    const PADDING = 2;\r\n    const CELL_SIZE = 40;\r\n    const CELL_LINE_THICKNESS = 4;\r\n    const CELL_ROUNDNESS = 14;\r\n    const CIRCLE_RADIUS = 12;\r\n    const COLORS = [\"#ffffff\", \"#334455\", \"#334455\", \"#004488\", \"#ffffff\", \"#ffffff\"];\r\n    //const COLORS = [\"#cccccc\", \"#554433\", \"#334455\", \"#004488\"];\r\n    const COLOR_CURSOR = \"#ffffff\";\r\n    const COLOR_GRID = \"#ffffff\";\r\n    const COLOR_PATH = \"#004488\";\r\n    // TODO alphas array\r\n\r\n    // cell types\r\n    const TYPE_BLOCK = 0;\r\n    const TYPE_EMPTY = 1;\r\n    const TYPE_ITEM_TO_COLLECT = 2;\r\n    const TYPE_PATH = 3;\r\n    //\r\n    var myGrid, myCursor;\r\n\r\n    // welcome level json data\r\n    game.levelData = pathologicLevelData;\r\n    game.currentLevelIndex = 0;\r\n    game.isLevelComplete = false;\r\n\r\n    class Cursor {\r\n        constructor(grid, x, y) {\r\n            this.grid = grid;\r\n            this.grid.cells[x][y].type = TYPE_PATH;\r\n            this.x = x;\r\n            this.y = y;\r\n            this.path = [{x: x, y: y}];\r\n        }\r\n\r\n        draw(ctx) {\r\n            var posX, posY;\r\n            ctx.shadowBlur = 0;\r\n            ctx.beginPath();\r\n            ctx.lineCap = \"round\";\r\n            ctx.lineJoin = \"round\";\r\n            ctx.lineWidth = CIRCLE_RADIUS * 2;\r\n            for (var i = 0; i < this.path.length; i++) {\r\n                posX = this.path[i].x * CELL_SIZE + CELL_SIZE / 2;\r\n                posY = this.path[i].y * CELL_SIZE + CELL_SIZE / 2;\r\n                ctx.lineTo(posX, posY);\r\n            }\r\n            ctx.strokeStyle = COLOR_PATH;\r\n            ctx.stroke();\r\n            ctx.beginPath();\r\n            ctx.arc(posX, posY, CIRCLE_RADIUS, 0, 2 * Math.PI);\r\n            ctx.fillStyle = COLOR_CURSOR;\r\n            ctx.fill();\r\n        }\r\n\r\n        moveLeft() {\r\n            this.move(this.x - 1, this.y);\r\n        }\r\n\r\n        moveUp() {\r\n            this.move(this.x, this.y - 1);\r\n        }\r\n\r\n        moveRight() {\r\n            this.move(this.x + 1, this.y);\r\n        }\r\n\r\n        moveDown() {\r\n            this.move(this.x, this.y + 1);\r\n        }\r\n\r\n        move(toX, toY) {\r\n            if (this.grid.cells[toX]) {\r\n                var newCell = this.grid.cells[toX][toY];\r\n                if (newCell && newCell.canPassThrough()) {\r\n                    newCell.type = TYPE_PATH;\r\n                    this.x = toX;\r\n                    this.y = toY;\r\n                    this.path.push({x: this.x, y: this.y});\r\n                }\r\n            }\r\n        }\r\n\r\n        canMoveToCell(toX, toY) {\r\n            if (this.grid.cells[toX]) {\r\n                var newCell = this.grid.cells[toX][toY];\r\n                if (newCell && newCell.canPassThrough()) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        canMove() {\r\n            return this.canMoveToCell(this.x - 1, this.y)\r\n                || this.canMoveToCell(this.x, this.y - 1)\r\n                || this.canMoveToCell(this.x + 1, this.y)\r\n                || this.canMoveToCell(this.x, this.y + 1);\r\n        }\r\n    }\r\n\r\n    class Cell {\r\n\r\n        constructor(x, y, type) {\r\n            this.x = x;\r\n            this.y = y;\r\n            this.type = type;\r\n        }\r\n\r\n        draw(ctx) {\r\n            // TODO glow\r\n            //ctx.shadowOffsetX = 0;\r\n            //ctx.shadowOffsetY = 0;\r\n            //ctx.shadowBlur = 8;\r\n            //ctx.shadowColor = \"rgba(68, 170, 255, 0.5)\"; //\"#ffffff\"\r\n\r\n            ctx.fillStyle = COLORS[this.type];\r\n            Cell.roundRect(ctx, this.x * CELL_SIZE, this.y * CELL_SIZE, CELL_SIZE, CELL_SIZE, CELL_ROUNDNESS, true, true);\r\n            switch (this.type) {\r\n                case TYPE_PATH:\r\n                    break;\r\n                case TYPE_BLOCK:\r\n                    break;\r\n                case TYPE_ITEM_TO_COLLECT:\r\n                    ctx.beginPath();\r\n                    ctx.arc(this.x * CELL_SIZE + CELL_SIZE / 2, this.y * CELL_SIZE + CELL_SIZE / 2, CIRCLE_RADIUS, 0, 2 * Math.PI);\r\n                    ctx.stroke();\r\n                    break;\r\n                case TYPE_EMPTY:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        canPassThrough() {\r\n            return this.type == TYPE_EMPTY || this.type == TYPE_ITEM_TO_COLLECT;\r\n        }\r\n\r\n        /**\r\n         * Draws a rounded rectangle using the current state of the canvas.\r\n         * If you omit the last three params, it will draw a rectangle\r\n         * outline with a 5 pixel border radius\r\n         * @param {CanvasRenderingContext2D} ctx\r\n         * @param {Number} x The top left x coordinate\r\n         * @param {Number} y The top left y coordinate\r\n         * @param {Number} width The width of the rectangle\r\n         * @param {Number} height The height of the rectangle\r\n         * @param {Number} [radius = 5] The corner radius; It can also be an object\r\n         *                 to specify different radii for corners\r\n         * @param {Number} [radius.tl = 0] Top left\r\n         * @param {Number} [radius.tr = 0] Top right\r\n         * @param {Number} [radius.br = 0] Bottom right\r\n         * @param {Number} [radius.bl = 0] Bottom left\r\n         * @param {Boolean} [fill = false] Whether to fill the rectangle.\r\n         * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\r\n         */\r\n        static roundRect(ctx, x, y, width, height, radius, fill, stroke) {\r\n            if (typeof stroke == 'undefined') {\r\n                stroke = true;\r\n            }\r\n            if (typeof radius === 'undefined') {\r\n                radius = 5;\r\n            }\r\n            if (typeof radius === 'number') {\r\n                radius = {tl: radius, tr: radius, br: radius, bl: radius};\r\n            } else {\r\n                var defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\r\n                for (var side in defaultRadius) {\r\n                    radius[side] = radius[side] || defaultRadius[side];\r\n                }\r\n            }\r\n            ctx.beginPath();\r\n            ctx.moveTo(x + radius.tl, y);\r\n            ctx.lineTo(x + width - radius.tr, y);\r\n            ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n            ctx.lineTo(x + width, y + height - radius.br);\r\n            ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\r\n            ctx.lineTo(x + radius.bl, y + height);\r\n            ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n            ctx.lineTo(x, y + radius.tl);\r\n            ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n            ctx.closePath();\r\n            if (fill) {\r\n                ctx.fill();\r\n            }\r\n            if (stroke) {\r\n                ctx.stroke();\r\n            }\r\n        }\r\n    }\r\n\r\n    class Grid {\r\n        constructor(dimensions, modifiedCells) {\r\n            this.cells = new Array(dimensions.x);\r\n\r\n            for (var i = 0; i < dimensions.x; i++) {\r\n                this.cells[i] = new Array(dimensions.y);\r\n                for (var j = 0; j < dimensions.y; j++) {\r\n                    this.cells[i][j] = new Cell(i, j, TYPE_EMPTY); // �������� ������ ������\r\n                }\r\n            }\r\n            for (var modCell of modifiedCells) {\r\n                this.cells[modCell[\"x\"]][modCell[\"y\"]].type = modCell[\"type\"]; // ����������� ����\r\n            }\r\n        }\r\n\r\n        draw(ctx) {\r\n            var cell;\r\n\r\n            ctx.strokeStyle = COLOR_GRID;\r\n            ctx.lineWidth = CELL_LINE_THICKNESS;\r\n            for (var i = 0, lengthX = this.cells.length; i < lengthX; i++) {\r\n                for (var j = 0; j < this.cells[i].length; j++) {\r\n                    cell = this.cells[i][j];\r\n                    // Draw using default border radius,\r\n                    // stroke it but no fill (function's default values)\r\n                    cell.draw(ctx);\r\n                }\r\n            }\r\n        }\r\n\r\n        isSolved() {\r\n            for (var i = 0; i < this.cells.length; i++) {\r\n                for (var j = 0, lengthJ = this.cells[i].length; j < lengthJ; j++) {\r\n                    if (this.cells[i][j].type == TYPE_ITEM_TO_COLLECT) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    class Game {\r\n        constructor(){\r\n        }\r\n\r\n    }\r\n\r\n    var redraw = function () {\r\n        var animFrame = window.requestAnimationFrame ||\r\n            window.webkitRequestAnimationFrame ||\r\n            window.mozRequestAnimationFrame ||\r\n            window.oRequestAnimationFrame ||\r\n            window.msRequestAnimationFrame ||\r\n            null;\r\n\r\n        animFrame(drawOnCanvas);\r\n    };\r\n\r\n    var drawOnCanvas = function () {\r\n        var canvas = document.getElementById('draw');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        // Clear the canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        myGrid.draw(ctx);\r\n        myCursor.draw(ctx);\r\n    };\r\n\r\n    var keyDownHandler = function (event) {\r\n        var key = event.which || event.keyCode;\r\n        switch (key) {\r\n            case 13: // Enter\r\n                if (game.isLevelComplete || DEBUG_MODE) {\r\n                    if (game.currentLevelIndex + 1 < game.levelData.length) {\r\n                        game.currentLevelIndex++;\r\n                    }\r\n                    startNewGame();\r\n                }\r\n                break;\r\n            case 8: // backspace\r\n                restartGame();\r\n                break;\r\n            case 37:  // left key\r\n                myCursor.moveLeft();\r\n                checkForGameOver();\r\n                redraw();\r\n                break;\r\n            case 38:  // up\r\n                myCursor.moveUp();\r\n                checkForGameOver();\r\n                redraw();\r\n                break;\r\n            case 39:  // right key\r\n                myCursor.moveRight();\r\n                checkForGameOver();\r\n                redraw();\r\n                break;\r\n            case 40: // down\r\n                myCursor.moveDown();\r\n                checkForGameOver();\r\n                redraw();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    var checkForGameOver = function () {\r\n        var winDiv = document.getElementById('win');\r\n        var loseDiv = document.getElementById('lose');\r\n\r\n        if (myGrid.isSolved()) {\r\n            // check if level is solved\r\n            console.log(\"WIN WIN WIN\");\r\n            game.isLevelComplete = true;\r\n            winDiv.setAttribute('class', 'visible');\r\n            loseDiv.setAttribute('class', 'hidden');\r\n        }\r\n        else if (!myCursor.canMove()) {\r\n            // if cannot move anywhere else => game over\r\n            console.log(\"game over LOSE\");\r\n            winDiv.setAttribute('class', 'hidden');\r\n            loseDiv.setAttribute('class', 'visible');\r\n        }\r\n    };\r\n\r\n    var restartGame = function () {\r\n        startNewGame();\r\n    };\r\n\r\n    var startNewGame = function () {\r\n        var winDiv = document.getElementById('win');\r\n        var loseDiv = document.getElementById('lose');\r\n        winDiv.setAttribute('class', 'hidden');\r\n        loseDiv.setAttribute('class', 'hidden');\r\n\r\n        if (game.currentLevelIndex == 0) {\r\n            showNewLevel();\r\n        }\r\n        else {\r\n            var canvas = document.getElementById('draw');\r\n            TweenLite.to(canvas, 0.5, {\r\n                width: 0, height: 0, onComplete: showNewLevel\r\n            });\r\n        }\r\n    };\r\n\r\n    var showNewLevel = function () {\r\n        game.isLevelComplete = false;\r\n        var currentLevel = game.levelData[game.currentLevelIndex];\r\n        var nameDiv = document.getElementById('level-name');\r\n        nameDiv.innerHTML = \"Level name: \" + currentLevel.name;\r\n        myGrid = new Grid(currentLevel.dimensions, currentLevel.modifiedCells);\r\n        myCursor = new Cursor(myGrid, currentLevel.cursor.x, currentLevel.cursor.y);\r\n\r\n        redraw();\r\n        var canvas = document.getElementById('draw');\r\n        // change size\r\n        var newWidth = currentLevel.dimensions.x * CELL_SIZE + PADDING * 2;\r\n        var newHeight = currentLevel.dimensions.y * CELL_SIZE + PADDING * 2;\r\n        canvas.width = newWidth;\r\n        canvas.height = newHeight;\r\n        // add padding\r\n        canvas.getContext(\"2d\").translate(PADDING, PADDING);\r\n        TweenLite.to(canvas, 0.5, {\r\n            width: newWidth, height: newHeight\r\n        });\r\n    };\r\n\r\n    var init = function () {\r\n        window.addEventListener(\"keydown\", keyDownHandler);\r\n        startNewGame();\r\n    };\r\n\r\n    return {init: init}\r\n})();\r\nwindow.onload = GameModule.init;\r\n"]}